name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main # Change this to your default branch

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Build with Docker (Permission-Fixed Fallbacks)
        run: |
          # Function to try building with different approaches
          build_jekyll() {
            echo "Attempting Jekyll build with approach: $1"
            
            case $1 in
              "jekyll-minimal-root")
                # Approach 1: Use jekyll/minimal as root, then fix permissions
                docker run \
                  --rm \
                  --volume="${{ github.workspace }}:/srv/jekyll" \
                  jekyll/minimal:latest \
                  /bin/bash -c "
                    cd /srv/jekyll && 
                    bundle install --retry 3 && 
                    bundle exec jekyll build &&
                    chmod -R 755 /srv/jekyll/_site
                  "
                ;;
                
              "jekyll-builder-root")
                # Approach 2: Use jekyll/builder as root
                docker run \
                  --rm \
                  --volume="${{ github.workspace }}:/srv/jekyll" \
                  jekyll/builder:latest \
                  /bin/bash -c "
                    cd /srv/jekyll && 
                    bundle install --retry 3 && 
                    bundle exec jekyll build &&
                    chmod -R 755 /srv/jekyll/_site
                  "
                ;;
                
              "ruby-root")
                # Approach 3: Use Ruby base image as root
                docker run \
                  --rm \
                  --volume="${{ github.workspace }}:/srv/jekyll" \
                  ruby:3.1 \
                  /bin/bash -c "
                    cd /srv/jekyll &&
                    gem install bundler jekyll &&
                    bundle install --retry 3 &&
                    bundle exec jekyll build &&
                    chmod -R 755 /srv/jekyll/_site
                  "
                ;;
                
              "ubuntu-root")
                # Approach 4: Use Ubuntu as root
                docker run \
                  --rm \
                  --volume="${{ github.workspace }}:/srv/jekyll" \
                  ubuntu:22.04 \
                  /bin/bash -c "
                    apt-get update -qq &&
                    apt-get install -y ruby-full build-essential zlib1g-dev &&
                    cd /srv/jekyll &&
                    gem install bundler jekyll &&
                    bundle install --retry 3 &&
                    bundle exec jekyll build &&
                    chmod -R 755 /srv/jekyll/_site
                  "
                ;;
                
              "github-action-native")
                # Approach 5: Use GitHub Actions built-in Ruby (no Docker)
                sudo apt-get update -qq
                sudo apt-get install -y ruby-full build-essential zlib1g-dev
                gem install bundler jekyll
                bundle install --retry 3
                bundle exec jekyll build
                ;;
            esac
          }
          
          # Try different approaches in order of preference
          approaches=("github-action-native" "jekyll-minimal-root" "jekyll-builder-root" "ruby-root" "ubuntu-root")
          
          for approach in "${approaches[@]}"; do
            echo "=== Trying approach: $approach ==="
            if build_jekyll "$approach"; then
              echo "✅ Success with approach: $approach"
              
              # Fix permissions for Docker approaches
              if [[ "$approach" != "github-action-native" ]]; then
                echo "Fixing file permissions..."
                sudo chown -R $(whoami):$(whoami) _site/ || true
                sudo chmod -R 755 _site/ || true
              fi
              
              break
            else
              echo "❌ Failed with approach: $approach (Exit code: $?)"
              if [ "$approach" != "ubuntu-root" ]; then
                echo "Trying next approach..."
                continue
              else
                echo "All approaches failed!"
                exit 1
              fi
            fi
          done
          
      - name: Create Gemfile if missing
        run: |
          if [ ! -f "Gemfile" ]; then
            echo "Creating basic Gemfile..."
            cat > Gemfile << 'EOF'
          source "https://rubygems.org"
          gem "jekyll", "~> 4.3"
          gem "webrick", "~> 1.7"
          
          group :jekyll_plugins do
            gem "jekyll-feed", "~> 0.12"
          end
          EOF
          fi
          
      - name: Verify build output
        run: |
          if [ -d "_site" ] && [ "$(ls -A _site)" ]; then
            echo "✅ Build successful - _site directory contains files"
            ls -la _site/
          else
            echo "❌ Build failed - _site directory is empty or doesn't exist"
            ls -la . || true
            exit 1
          fi
          
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    concurrency:
      group: pages-deployment
      cancel-in-progress: true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
